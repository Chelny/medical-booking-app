generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Appointment {
  id         Int       @id @default(autoincrement())
  patient_id Int
  doctor_id  Int
  start_date DateTime  @db.DateTime(0)
  end_date   DateTime  @db.DateTime(0)
  created_at DateTime? @default(now()) @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  Doctor     Doctor    @relation(fields: [doctor_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "appointment_ibfk_2")
  Patient    Patient   @relation(fields: [patient_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "appointment_ibfk_1")

  @@index([doctor_id], map: "doctor_id")
  @@index([patient_id], map: "patient_id")
}

model Contact {
  id            Int       @id @default(autoincrement())
  user_id       Int       @unique(map: "user_id")
  address       String    @db.VarChar(255)
  address_line2 String?   @db.VarChar(255)
  city          String    @db.VarChar(255)
  region        String    @db.VarChar(255)
  country       String    @db.VarChar(255)
  postal_code   String    @db.VarChar(255)
  phone_number  String    @db.VarChar(255)
  phone_ext     String?   @db.VarChar(255)
  created_at    DateTime? @default(now()) @db.DateTime(0)
  updated_at    DateTime  @default(now()) @db.Timestamp(0)
  User          User      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "contact_ibfk_1")
}

model Doctor {
  id               Int              @id @default(autoincrement())
  user_id          Int              @unique(map: "user_id")
  department_id    Int
  image_name       String?          @db.VarChar(255)
  start_date       DateTime?        @default(now()) @db.DateTime(0)
  end_date         DateTime?        @db.DateTime(0)
  created_at       DateTime?        @default(now()) @db.DateTime(0)
  updated_at       DateTime         @default(now()) @db.Timestamp(0)
  Appointment      Appointment[]
  DoctorDepartment DoctorDepartment @relation(fields: [department_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "doctor_ibfk_1")
  User             User             @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "doctor_ibfk_2")
  DoctorSchedule   DoctorSchedule[]

  @@index([department_id], map: "department_id")
}

model Patient {
  id          Int           @id @default(autoincrement())
  user_id     Int           @unique(map: "user_id")
  medical_id  String        @unique(map: "medical_id") @db.VarChar(255)
  height      String?       @db.VarChar(255)
  weight      String?       @db.VarChar(255)
  created_at  DateTime?     @default(now()) @db.DateTime(0)
  updated_at  DateTime      @default(now()) @db.Timestamp(0)
  Appointment Appointment[]
  User        User          @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "patient_ibfk_1")
}

model User {
  id         Int         @id @default(autoincrement())
  first_name String      @db.VarChar(255)
  last_name  String      @db.VarChar(255)
  gender     User_gender
  birth_date DateTime    @db.DateTime(0)
  email      String      @unique(map: "email") @db.VarChar(255)
  username   String?     @unique(map: "username") @db.VarChar(255)
  password   String      @db.VarChar(255)
  role_id    Int         @default(3)
  language   String      @default("EN") @db.VarChar(255)
  active     Boolean?    @default(true)
  created_at DateTime?   @default(now()) @db.DateTime(0)
  updated_at DateTime    @default(now()) @db.Timestamp(0)
  Contact    Contact?
  Doctor     Doctor?
  Patient    Patient?
  UserRole   UserRole    @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_ibfk_1")

  @@index([role_id], map: "role_id")
}

model DoctorDepartment {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(255)
  duration   Int
  created_at DateTime? @default(now()) @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  Doctor     Doctor[]
}

model UserRole {
  id         Int       @id @default(autoincrement())
  title      String    @db.VarChar(255)
  created_at DateTime? @default(now()) @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  User       User[]
}

model DoctorSchedule {
  id         Int       @id @default(autoincrement())
  doctor_id  Int
  weekday    Int
  created_at DateTime? @default(now()) @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  Doctor     Doctor    @relation(fields: [doctor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "doctorschedule_ibfk_1")

  @@index([doctor_id], map: "doctor_id")
}

enum User_gender {
  F
  M
  O
}
